"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatusShape = exports.StatusColor = void 0;
const globals_1 = require("../../globals");
const date_1 = require("../../helpers/date");
const Events_1 = require("../events/Events");
const helpers_1 = require("./helpers");
var StatusColor;
(function (StatusColor) {
    StatusColor["Blue"] = "blue";
    StatusColor["Green"] = "green";
    StatusColor["Grey"] = "grey";
    StatusColor["Red"] = "red";
    StatusColor["Yellow"] = "yellow";
})(StatusColor = exports.StatusColor || (exports.StatusColor = {}));
var StatusShape;
(function (StatusShape) {
    StatusShape["Dot"] = "dot";
    StatusShape["Ring"] = "ring";
})(StatusShape = exports.StatusShape || (exports.StatusShape = {}));
class Status {
    constructor(props) {
        this.lastStatus = {};
        this.config = props.config;
        this.nodeEvents = props.nodeEvents;
        this.node = props.node;
        this.nodeState = props.state;
        this.nodeEvents.addListener(Events_1.NodeEvent.StateChanged, this.onNodeStateChange.bind(this));
    }
    get isNodeEnabled() {
        return this.nodeState.isEnabled();
    }
    get isNodeDisabled() {
        return this.nodeState.isEnabled() === false;
    }
    onNodeStateChange() {
        this.updateStatus(this.lastStatus);
    }
    set(status = {}) {
        if (this.isNodeEnabled) {
            this.lastStatus = status;
        }
        this.updateStatus(status);
    }
    setText(text = '') {
        this.set({ text });
    }
    setSuccess(text = 'home-assistant.status.success') {
        this.set({
            fill: StatusColor.Green,
            shape: StatusShape.Dot,
            text: this.appendDateString(text),
        });
    }
    setSending(text = 'home-assistant.status.sending') {
        this.set({
            fill: StatusColor.Yellow,
            shape: StatusShape.Dot,
            text: this.appendDateString(text),
        });
    }
    setFailed(text = 'home-assistant.status.failed') {
        this.set({
            fill: StatusColor.Red,
            shape: StatusShape.Ring,
            text: this.appendDateString(text),
        });
    }
    updateStatus(status) {
        if (this.isNodeDisabled) {
            status = {
                fill: StatusColor.Grey,
                shape: StatusShape.Dot,
                text: 'home-assistant.status.disabled',
            };
        }
        this.node.status(status);
    }
    appendDateString(text) {
        var _a, _b;
        const separator = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.statusSeparator) !== null && _b !== void 0 ? _b : '';
        const dateString = (0, date_1.formatDate)({
            options: (0, helpers_1.getStatusOptions)(this.config),
        });
        return `${globals_1.RED._(`${text}`)} ${separator}${dateString}`;
    }
}
exports.default = Status;

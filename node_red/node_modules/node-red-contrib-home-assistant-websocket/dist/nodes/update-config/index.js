"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const joi_1 = __importDefault(require("joi"));
const helpers_1 = require("../../common/controllers/helpers");
const Events_1 = __importDefault(require("../../common/events/Events"));
const Integration_1 = __importDefault(require("../../common/integration/Integration"));
const InputService_1 = __importDefault(require("../../common/services/InputService"));
const State_1 = __importDefault(require("../../common/State"));
const Status_1 = __importDefault(require("../../common/status/Status"));
const globals_1 = require("../../globals");
const migrate_1 = require("../../helpers/migrate");
const node_1 = require("../../helpers/node");
const homeAssistant_1 = require("../../homeAssistant");
const UpdateConfigController_1 = __importDefault(require("./UpdateConfigController"));
const inputs = {
    id: {
        messageProp: 'payload.id',
        configProp: 'entityConfig',
    },
    name: {
        messageProp: 'payload.name',
    },
    icon: {
        messageProp: 'payload.icon',
    },
    entityPicture: {
        messageProp: 'payload.entityPicture',
    },
};
const inputSchema = joi_1.default.object({
    id: joi_1.default.string().required(),
    name: joi_1.default.string().allow(''),
    icon: joi_1.default.string().allow(''),
    entityPicture: joi_1.default.string().allow(''),
});
function UpdateConfig(config) {
    globals_1.RED.nodes.createNode(this, config);
    this.config = (0, migrate_1.migrate)(config);
    const serverConfigNode = (0, node_1.getServerConfigNode)(this.config.server);
    const homeAssistant = (0, homeAssistant_1.getHomeAssistant)(serverConfigNode);
    const nodeEvents = new Events_1.default({ node: this, emitter: this });
    const state = new State_1.default(this);
    const status = new Status_1.default({
        config: serverConfigNode.config,
        nodeEvents,
        node: this,
        state,
    });
    const controllerDeps = (0, helpers_1.createControllerDependencies)(this, homeAssistant);
    const inputService = new InputService_1.default({
        inputs,
        nodeConfig: this.config,
        schema: inputSchema,
    });
    const integration = new Integration_1.default({ homeAssistant, state });
    // eslint-disable-next-line no-new
    new UpdateConfigController_1.default({
        homeAssistant,
        inputService,
        integration,
        node: this,
        status,
        ...controllerDeps,
    });
}
exports.default = UpdateConfig;

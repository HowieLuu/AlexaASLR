"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const helpers_1 = require("../../common/controllers/helpers");
const ClientEvents_1 = __importDefault(require("../../common/events/ClientEvents"));
const Events_1 = __importDefault(require("../../common/events/Events"));
const InputService_1 = __importDefault(require("../../common/services/InputService"));
const State_1 = __importDefault(require("../../common/State"));
const EventStatus_1 = __importDefault(require("../../common/status/EventStatus"));
const globals_1 = require("../../globals");
const migrate_1 = require("../../helpers/migrate");
const node_1 = require("../../helpers/node");
const homeAssistant_1 = require("../../homeAssistant");
const binary_sensor_1 = require("../binary-sensor");
const SensorController_1 = __importDefault(require("./SensorController"));
function Sensor(config) {
    globals_1.RED.nodes.createNode(this, config);
    this.config = (0, migrate_1.migrate)(config);
    const { entityConfigNode, serverConfigNode } = (0, node_1.getConfigNodes)(this);
    const homeAssistant = (0, homeAssistant_1.getHomeAssistant)(serverConfigNode);
    const clientEvents = new ClientEvents_1.default({
        node: this,
        emitter: homeAssistant.eventBus,
    });
    const nodeEvents = new Events_1.default({ node: this, emitter: this });
    const state = new State_1.default(this);
    const status = new EventStatus_1.default({
        config: serverConfigNode.config,
        clientEvents,
        nodeEvents,
        node: this,
        state,
    });
    clientEvents.setStatus(status);
    const controllerDeps = (0, helpers_1.createControllerDependencies)(this, homeAssistant);
    const inputService = new InputService_1.default({
        inputs: binary_sensor_1.inputs,
        nodeConfig: this.config,
        schema: binary_sensor_1.inputSchema,
    });
    // eslint-disable-next-line no-new
    new SensorController_1.default({
        homeAssistant,
        inputService,
        node: this,
        status,
        integration: entityConfigNode.integration,
        ...controllerDeps,
    });
}
exports.default = Sensor;
